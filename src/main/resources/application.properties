
#设置端口号
server.port=8088
#web
#spring.mvc.view.prefix=/WEB-INF/jsp/
#spring.mvc.view.suffix=.jsp

#数据库访问配置
#mysql
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/test?useUnicode=true&characterEncoding=UTF-8
spring.datasource.username=root
spring.datasource.password=1234


#连接池配置
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
#连接等待超时时间
spring.datasource.maxWait=60000
#配置隔多久进行一次检测(检测可以关闭的空闲连接)
spring.datasource.timeBetweenEvictionRunsMillis=60000
#配置连接在池中的最小生存时间
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000

#mybatis
spring.datasource.mybatis.model=com.shiroSpringboot.entity
spring.datasource.mybatis.mapperxml=classpath:/mapper/*.xml

#pagehelper 分页
pagehelper.helperDialect=mysql
pagehelper.reasonable=true
pagehelper.supportMethodsArguments=true
pagehelper.params=count=countSql
 
#redis 注意这里redis优化的配置
redis.host=127.0.0.1
#redis.port=8901
redis.port=6379
#redis.password=root
redis.password=
# 连接池中的最小空闲连接
redis.pool.minIdle=8
# 连接池中的最大空闲连接
redis.pool.maxIdle=500
 # 连接池最大连接数（使用负值表示没有限制）
redis.pool.maxActive=2000
# 连接池最大阻塞等待时间（使用负值表示没有限制）
redis.pool.maxWait=10000
# 连接超时时间（毫秒
redis.pool.timeOut=0



    
    
    






